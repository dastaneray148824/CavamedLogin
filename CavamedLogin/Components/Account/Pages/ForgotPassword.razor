@page "/Account/ForgotPassword"
@layout EmptyLayout
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using CavamedLogin.Data
@inject IStringLocalizer<Login> L
@using Microsoft.Extensions.Localization
@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Giriş Yap</PageTitle>

<div class="login-container">

    <!-- SOL TARAF: KATMANLI FOTOĞRAF PANELİ -->
    <div class="login-image-panel">
        <!-- Fotoğraf katmanları -->
        <div class="bg-layer bg-layer-1"></div>
        <div class="bg-layer bg-layer-2"></div>
        <div class="bg-layer bg-layer-3"></div>

        <!-- Marka başlığı (en üstte) -->

    </div>

    <!-- SAĞ TARAF: FORM PANELİ (Aynı kalabilir) -->
    <div class="login-form-panel">
        <div class="login-card">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger text-center" role="alert">
                    @errorMessage
                </div>
            }
            <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
                <DataAnnotationsValidator />
                <img src="image/cavamedlogo.png" alt="CAVAMED" class="brand-logo" />
                <h1 class="welcome-title">@L["Resetpassword"]</h1>
                <br />
                <ValidationSummary class="text-danger" role="alert" />

                <div class="form-floating mb-3">
                    <InputText @bind-Value="Input.Email" class="form-control" autocomplete="email" aria-required="true" placeholder="name@example.com" />
                    <label for="email" class="form-label">@L["EMail"]</label>
                    <ValidationMessage For="() => Input.Email" class="text-danger" />
                </div>
                <div class="d-grid fade-in-up delay-5">
                    <button type="submit" class="w-100 btn btn-primary btn-lg login-btn">@L["Resetpassword"]</button>
                </div>
                <br />
                <p>
                    <a href="/Account/Login">@L["LoginButton"]</a>
                </p>
            </EditForm>

        </div>
        <CultureSelector />
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();
    private string errorMessage ;
    private async Task OnValidSubmitAsync()
    {
        if (string.IsNullOrEmpty(Input.Email))
        {
            errorMessage = L["EmailRequired"];
            return;
        }
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        // For more information on how to enable account confirmation and password reset please
        // visit https://go.microsoft.com/fwlink/?LinkID=532713
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
       
        public string Email { get; set; } = "";
    }
}
